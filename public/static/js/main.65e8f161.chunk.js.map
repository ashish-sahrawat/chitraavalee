{"version":3,"sources":["chitravaleelogo.png","helpers/store.js","components/Header/Header.js","components/Comment/Comment.js","helpers/apiHelper.js","components/PostComments/PostComments.js","components/Post/Post.js","components/ImageUpload/ImageUpload.js","components/AddAlbum/AddAlbum.js","components/Album/Album.js","components/EditAlbum/EditAlbum.js","components/ViewAlbumPosts/ViewAlbumPosts.js","components/Albums/Albums.js","components/ViewUsers/ViewUsers.js","components/SearchedProfiles/SearchedProfiles.js","components/Profile/Profile.js","components/Login/Login.js","components/Signup/Signup.js","App.js","index.js"],"names":["stateNameVSStateMap","Map","callBackHandlersArray","eventNames","CURRENT_USER","TOKEN","SUCCESS_ALERT","DANGER_ALERT","saveOrUpdateState","stateName","stateData","set","removeState","delete","removeHandler","eventName","filter","ele","expo","getState","get","registerHandler","callback","push","fireEvent","data","forEach","events","updateCurrentUser","newCurrentUser","localStorage","removeItem","setItem","JSON","stringify","Header","searchUserHandler","useState","user","setUser","searchText","setSearchText","history","useHistory","useEffect","store","token","getItem","currentUser","parse","className","href","src","logo","alt","to","type","placeholder","value","onChange","event","target","onClick","preventDefault","Comment","commenterName","message","commentDate","months","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getTime","email","password","a","url","getOriginURL","body","fetch","method","headers","response","json","name","albumName","isPrivate","albumId","postId","comment","emailToFollow","doLogin","doRegister","addAlbum","getAlbumsForCurrentUser","updateAlbum","getPostsForAlbumId","addCommentToPost","getSearchedUsers","followUser","unfollowUser","getWorldPosts","getUserDetails","PostComments","postComments","comments","setComments","newComment","setNewComment","length","map","index","apiHelper","then","resp","newComments","userName","commenterEmail","userEmail","Post","imageUrl","caption","timestamp","album","openAlbum","userPhoto","setUserPhoto","code","photo","undefined","style","ImageUpload","setCaption","file","setFile","progress","setProgress","albums","setAlbums","selectedAlbumId","setSelectedAlbumId","progressHandler","percent","loaded","total","completeHandler","setTimeout","id","errorHandler","console","log","abortHandler","_id","width","accept","files","formdata","FormData","append","ajax","XMLHttpRequest","upload","addEventListener","open","setRequestHeader","send","uploadFile","AddAlbum","handler","setAlbumName","setIsPrivate","checked","Album","albumClickedHandler","EditAlbum","selectedAlbum","onSubmit","ViewAlbumPosts","posts","setPosts","post","dateAdded","fileName","Albums","status","setStatus","setSelectedAlbum","fetchAlbums","title","ViewUsers","userFollows","currentUserFollows","setCurrentUserFollows","findIndex","res","SearchedProfiles","searchedText","searchedUsers","setSearchedUsers","users","Profile","setCurrentUser","setPhoto","currentTarget","Login","setEmail","setPassword","loginHandler","loginResponse","follows","required","Signup","username","setUsername","App","alertMessage","setAlertMessage","element","document","getElementById","classList","remove","offsetWidth","add","fetchPosts","openAlbumHandler","path","exact","render","props","component","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.65e8f161.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chitravaleelogo.71ac4293.png\";","let stateNameVSStateMap = new Map();\r\nlet callBackHandlersArray = [];\r\n\r\n\r\nlet eventNames = {\r\n    CURRENT_USER: 'currentUser',\r\n    TOKEN: 'token',\r\n    SUCCESS_ALERT: 'successAlert',\r\n    DANGER_ALERT: 'dangerAlert',\r\n}\r\n\r\nfunction updateCurrentUser(newCurrentUser) {\r\n    localStorage.removeItem(eventNames.CURRENT_USER);\r\n    removeState(eventNames.CURRENT_USER);\r\n    saveOrUpdateState(eventNames.CURRENT_USER, newCurrentUser);\r\n    localStorage.setItem(eventNames.CURRENT_USER, JSON.stringify(newCurrentUser));\r\n}\r\n\r\nfunction saveOrUpdateState(stateName, stateData) {\r\n    stateNameVSStateMap.set(stateName, stateData);\r\n}\r\n\r\nfunction getState(stateName) {\r\n    return stateNameVSStateMap.get(stateName);\r\n}\r\n\r\nfunction removeState(stateName) {\r\n    return stateNameVSStateMap.delete(stateName);\r\n}\r\n\r\nfunction registerHandler(eventName, callback) {\r\n    removeHandler(eventName);\r\n    callBackHandlersArray.push({ eventName, callback });\r\n}\r\n\r\nfunction removeHandler(eventName) {\r\n    callBackHandlersArray = callBackHandlersArray.filter(ele => ele.eventName !== eventName);\r\n}\r\n\r\nfunction fireEvent(eventName, data) {\r\n    callBackHandlersArray.forEach(callback => {\r\n        if (callback.eventName === eventName)\r\n            callback.callback(data)\r\n    });\r\n}\r\n\r\nlet expo = { saveOrUpdateState, getState, registerHandler, fireEvent, events: eventNames, removeState, updateCurrentUser, removeHandler };\r\nexport default expo;","import './Header.css';\r\nimport logo from '../../chitravaleelogo.png';\r\nimport { useEffect, useState } from 'react';\r\nimport store from '../../helpers/store';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction Header({ searchUserHandler }) {\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    function handleSearchText(event) {\r\n        event.preventDefault();\r\n        searchUserHandler(searchText);\r\n    }\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const openHomePageHandler = (data) => {\r\n            let token = localStorage.getItem(store.events.TOKEN);\r\n            let currentUser = localStorage.getItem(store.events.CURRENT_USER);\r\n            if (token && currentUser) {\r\n                store.saveOrUpdateState(store.events.CURRENT_USER, JSON.parse(currentUser));\r\n                store.saveOrUpdateState(store.events.TOKEN, token);\r\n                setUser(currentUser);\r\n            }\r\n        }\r\n        store.registerHandler('home', openHomePageHandler);\r\n        return () => {\r\n            store.removeHandler('home');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(store.events.TOKEN);\r\n        let currentUser = localStorage.getItem(store.events.CURRENT_USER);\r\n        if (token && currentUser) {\r\n            store.saveOrUpdateState(store.events.CURRENT_USER, JSON.parse(currentUser));\r\n            store.saveOrUpdateState(store.events.TOKEN, token);\r\n            setUser(currentUser);\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(store.events.TOKEN);\r\n        if (!token) {\r\n            history.push('/login');\r\n        }\r\n    }, [history]);\r\n\r\n    const logoutHandler = (event) => {\r\n        localStorage.removeItem(store.events.TOKEN);\r\n        localStorage.removeItem(store.events.CURRENT_USER);\r\n        store.removeState(store.events.TOKEN);\r\n        store.removeState(store.events.CURRENT_USER);\r\n        setUser(null);\r\n        history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm  navbar-light header\">\r\n            <a className=\"navbar-brand ms-auto\" href=\"/\">\r\n                <img src={logo} alt=\"logo\" className=\"logo-img\" />\r\n            </a>\r\n\r\n            <ul className=\"navbar-nav mx-auto\">\r\n\r\n\r\n                {user != null &&\r\n                    <>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/\">World</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/albums\">My Albums</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/upload\">Upload</Link>\r\n                        </li>\r\n                    </>\r\n                }\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav me-auto\">\r\n                {user != null &&\r\n                    <li className=\"nav-item spacingForm\">\r\n                        <form className=\"form-inline\">\r\n                            <input className=\"form-control\" type=\"text\" placeholder=\"Search Users\" value={searchText} onChange={(event) => { setSearchText(event.target.value) }} />\r\n                            <button className=\"btn btn-dark\" type=\"submit\" onClick={handleSearchText}>Search</button>\r\n                        </form>\r\n                    </li>\r\n                }\r\n                <li className=\"nav-item\">\r\n                    {user == null ?\r\n                        <>\r\n                            <Link to=\"/login\" className=\"btn btn-dark spacingButton\">Login</Link>\r\n                            <Link to=\"/signup\" className=\"btn btn-dark\">SignUp</Link>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Link to=\"/profile\" className=\"btn btn-dark spacingButton\">Profile</Link>\r\n                            <button className=\"btn btn-dark\" onClick={logoutHandler}>Logout</button>\r\n                        </>\r\n\r\n                    }\r\n                </li>\r\n            </ul>\r\n\r\n\r\n\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Comment.css';\r\n\r\nfunction Comment({ commenterName, message, commentDate }) {\r\n\r\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\r\n    function getTime() {\r\n        var date = new Date(commentDate);\r\n        return date.getDate() + \"/\" + months[date.getMonth()] + '/' + date.getFullYear() + ' ' + date.getHours() + ':' + date.getMinutes();\r\n    }\r\n    return (\r\n        <div className='comment'>\r\n            <div className='commentText'><b>{commenterName}</b> {message}</div>\r\n            <div className='commentDate' >{getTime()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","\r\n\r\n//const IP = 'localhost';\r\nconst IP = null;\r\nconst PORT = 7814;\r\nconst PROTOCOL = 'http';\r\nconst DOMAIN = '';\r\n\r\nasync function doLogin(email, password) {\r\n    let url = getOriginURL();\r\n    url += '/api/login';\r\n    let body = {\r\n        \"email\": email,\r\n        \"password\": password\r\n    }\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    });\r\n    return response.json();\r\n}\r\n\r\nasync function doRegister(email, name, password) {\r\n    let url = getOriginURL();\r\n    url += '/api/register';\r\n    let body = {\r\n        \"email\": email,\r\n        \"password\": password,\r\n        \"name\": name\r\n    }\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    });\r\n    return response.json();\r\n}\r\n\r\nasync function addAlbum(albumName, isPrivate, token) {\r\n    let url = getOriginURL();\r\n    url += '/api/album';\r\n    let body = {\r\n        \"albumName\": albumName,\r\n        \"isPrivate\": isPrivate\r\n    }\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'token': 'Bearer ' + token\r\n        },\r\n        body: JSON.stringify(body)\r\n    });\r\n    return response.json();\r\n}\r\n\r\nasync function getAlbumsForCurrentUser(token) {\r\n\r\n\r\n    let url = getOriginURL();\r\n    url += '/api/albums';\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'token': 'Bearer ' + token\r\n        }\r\n    });\r\n    return response.json();\r\n}\r\n\r\nasync function getPostsForAlbumId(albumId, token) {\r\n\r\n\r\n    let url = getOriginURL();\r\n    url += ('/api/posts/' + albumId);\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'token': 'Bearer ' + token\r\n        }\r\n    });\r\n    return response.json();\r\n}\r\n\r\nfunction getOriginURL() {\r\n    let url = '';\r\n    if (DOMAIN) {\r\n        url = `${PROTOCOL}://${DOMAIN}`;\r\n    }\r\n    else if (IP) {\r\n\r\n        url = `${PROTOCOL}://${IP}:${PORT}`;\r\n    }\r\n    return url;\r\n}\r\n\r\nasync function updateAlbum(albumId, albumName, isPrivate, token) {\r\n\r\n\r\n    let url = getOriginURL();\r\n    url += '/api/album/' + albumId;\r\n    let body = {\r\n        \"albumName\": albumName,\r\n        \"isPrivate\": isPrivate\r\n    }\r\n    const response = await fetch(url, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'token': 'Bearer ' + token\r\n        },\r\n        body: JSON.stringify(body)\r\n    });\r\n    return response.json();\r\n}\r\n\r\nasync function addCommentToPost(postId, comment, token) {\r\n    let url = getOriginURL();\r\n    url += '/api/post/comment';\r\n    let body = {\r\n        \"postId\": postId,\r\n        \"comment\": comment\r\n    }\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'token': 'Bearer ' + token\r\n        },\r\n        body: JSON.stringify(body)\r\n    });\r\n    return response.json();\r\n}\r\n\r\nasync function getSearchedUsers(searchText, token) {\r\n    let url = getOriginURL();\r\n    url += ('/api/users?search=' + searchText);\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'token': 'Bearer ' + token\r\n        }\r\n    });\r\n    return response.json();\r\n}\r\n\r\nasync function followUser(emailToFollow, token) {\r\n    let url = getOriginURL();\r\n    url += '/api/users/follow';\r\n    let body = {\r\n        \"emailToFollow\": emailToFollow\r\n    }\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'token': 'Bearer ' + token\r\n        },\r\n        body: JSON.stringify(body)\r\n    });\r\n    return response.json();\r\n}\r\n\r\nasync function unfollowUser(emailToFollow, token) {\r\n    let url = getOriginURL();\r\n    url += '/api/users/unfollow';\r\n    let body = {\r\n        \"emailToUnFollow\": emailToFollow\r\n    }\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'token': 'Bearer ' + token\r\n        },\r\n        body: JSON.stringify(body)\r\n    });\r\n    return response.json();\r\n}\r\n\r\nasync function getWorldPosts(token) {\r\n    let url = getOriginURL();\r\n    url += '/api/worldPosts';\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'token': 'Bearer ' + token\r\n        }\r\n    });\r\n    return response.json();\r\n}\r\n\r\nasync function getUserDetails(email, token) {\r\n    let url = getOriginURL();\r\n    url += '/api/user/' + email;\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'token': 'Bearer ' + token\r\n        }\r\n    });\r\n    return response.json();\r\n}\r\n\r\nlet expo = {\r\n    doLogin, doRegister, addAlbum, getAlbumsForCurrentUser, updateAlbum, getOriginURL, getPostsForAlbumId, addCommentToPost, getSearchedUsers,\r\n    followUser, unfollowUser, getWorldPosts, getUserDetails\r\n};\r\n\r\nexport default expo;","import React, { useState } from 'react'\r\nimport Comment from '../Comment/Comment';\r\nimport './PostComments.css';\r\nimport store from '../../helpers/store';\r\nimport apiHelper from '../../helpers/apiHelper';\r\n\r\nfunction PostComments({ postId, postComments }) {\r\n\r\n    const [comments, setComments] = useState(postComments);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n\r\n    function handleAddComment(event) {\r\n        event.preventDefault();\r\n        let token = store.getState(store.events.TOKEN);\r\n        apiHelper.addCommentToPost(postId, newComment, token).then((resp) => {\r\n\r\n        });\r\n\r\n        let currentUser = store.getState(store.events.CURRENT_USER);\r\n        let newComments = comments;\r\n        newComments = [{\r\n            commenterName: currentUser.userName,\r\n            commenterEmail: currentUser.userEmail,\r\n            message: newComment,\r\n            commentDate: new Date()\r\n        }, ...comments];\r\n        setComments(newComments);\r\n        setNewComment('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"commentList\">\r\n                {comments.length === 0 ? <>No Comments yet</> :\r\n                    comments.map((comment, index) => (\r\n                        <Comment key={index} commenterName={comment.commenterName} message={comment.message} commentDate={comment.commentDate} />\r\n                    )\r\n                    )\r\n                }\r\n            </div>\r\n            <form className=\"form\">\r\n                <input type=\"text\" className=\"form-control newCommentInput\" placeholder=\"Add a comment...\" value={newComment} onChange={(event) => { setNewComment(event.target.value) }} />\r\n\r\n                <button className=\"btn btn-light newCommentButton\" type=\"submit\" onClick={handleAddComment}>Post</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComments\r\n","import React, { useEffect, useState } from 'react';\r\nimport PostComments from '../PostComments/PostComments';\r\nimport './Post.css';\r\nimport store from '../../helpers/store';\r\nimport apiHelper from '../../helpers/apiHelper';\r\n\r\nfunction Post({ userName, imageUrl, caption, timestamp, album, openAlbum, comments, postId, userEmail }) {\r\n\r\n    const [userPhoto, setUserPhoto] = useState(null);\r\n\r\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\r\n    function getTime() {\r\n        var date = new Date(timestamp);\r\n        return date.getDate() + \"/\" + months[date.getMonth()] + '/' + date.getFullYear() + ' ' + date.getHours() + ':' + date.getMinutes();\r\n    }\r\n\r\n    const albumClicked = (event) => {\r\n        openAlbum(album);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let token = store.getState(store.events.TOKEN);\r\n        if (userEmail)\r\n            apiHelper.getUserDetails(userEmail, token).then((resp) => {\r\n                if (resp.code === 0) {\r\n                    let user = resp.response;\r\n                    if (user.photo) {\r\n                        setUserPhoto(apiHelper.getOriginURL() + '/userimage/' + user.photo);\r\n                    }\r\n                }\r\n                else {\r\n                    store.fireEvent(store.events.DANGER_ALERT, 'Unable to get user details');\r\n                }\r\n            }, [userEmail]);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"card text-center shadow rounded post\">\r\n            <div className=\"card-header\">\r\n                <img src={userPhoto == null || userPhoto === '' || userPhoto === undefined ? process.env.PUBLIC_URL + \"/images/img_avatar.png\" : userPhoto} className=\"img-fluid avatar\" alt=\"post pic\" />\r\n                <div className=\"posthead-left-text\">\r\n                    <p style={{ \"fontWeight\": \"bold\" }}>{userName}</p>\r\n                    <p style={{ \"fontSize\": \"small\" }}>{getTime()}</p>\r\n                </div>\r\n                <div className=\"posthead-right-text\">\r\n                    <p onClick={albumClicked} style={{ \"fontStyle\": \"italic\", \"cursor\": \"pointer\", \"textDecoration\": \"underline\" }}>{album && album.albumName}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <img src={imageUrl} className=\"card-img-top img-fluid\" alt=\"post pic\" />\r\n                <p className=\"card-text\"><b>{userName}: </b>{caption}</p>\r\n\r\n            </div>\r\n            <div className=\"card-footer myfooter\">\r\n                <PostComments postId={postId} postComments={comments} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import './ImageUpload.css';\r\nimport { useState, useEffect } from 'react';\r\nimport apiHelper from '../../helpers/apiHelper';\r\nimport store from '../../helpers/store';\r\n\r\nfunction ImageUpload() {\r\n\r\n    const [caption, setCaption] = useState('');\r\n    const [file, setFile] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const [albums, setAlbums] = useState([]);\r\n    const [selectedAlbumId, setSelectedAlbumId] = useState('');\r\n\r\n    useEffect(() => {\r\n        let token = store.getState(store.events.TOKEN);\r\n        apiHelper.getAlbumsForCurrentUser(token).then((resp) => {\r\n            if (resp.code === 0) {\r\n                let albums = resp.response;\r\n                setAlbums(albums.map(album => {\r\n                    return {\r\n                        id: album._id,\r\n                        albumName: album.name,\r\n                        isPrivate: album.isPrivate,\r\n                        userEmail: album.userEmail\r\n                    };\r\n                }\r\n                ));\r\n                if (albums.length > 0)\r\n                    setSelectedAlbumId(albums[0]._id);\r\n            }\r\n            else {\r\n                store.fireEvent(store.events.DANGER_ALERT, 'Failed to fetch User Albums.');\r\n            }\r\n        });\r\n\r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.files[0]) {\r\n            setFile(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    function uploadFile() {\r\n        let token = store.getState(store.events.TOKEN);\r\n        let url = apiHelper.getOriginURL();\r\n        url += '/api/post';\r\n        var formdata = new FormData();\r\n        formdata.append(\"postImage\", file);\r\n        formdata.append('caption', caption);\r\n        formdata.append('albumId', selectedAlbumId);\r\n        var ajax = new XMLHttpRequest();\r\n\r\n        ajax.upload.addEventListener(\"progress\", progressHandler, false);\r\n        ajax.addEventListener(\"load\", completeHandler, false);\r\n        ajax.addEventListener(\"error\", errorHandler, false);\r\n        ajax.addEventListener(\"abort\", abortHandler, false);\r\n        ajax.open(\"POST\", url);\r\n        ajax.setRequestHeader('token', `Bearer ${token}`);\r\n        ajax.send(formdata);\r\n    }\r\n\r\n    function progressHandler(event) {\r\n        var percent = (event.loaded / event.total) * 100;\r\n        setProgress(percent);\r\n    }\r\n\r\n    function completeHandler(event) {\r\n        store.fireEvent(store.events.SUCCESS_ALERT, 'New Post created.');\r\n        setCaption('');\r\n        setFile(null);\r\n        setTimeout(() => {\r\n            setProgress(0);\r\n        }, 1000);\r\n        setSelectedAlbumId(albums[0].id);\r\n    }\r\n\r\n    function errorHandler(event) {\r\n        store.fireEvent(store.events.DANGER_ALERT, 'Failed creating Post.');\r\n        console.log(event);\r\n    }\r\n\r\n    function abortHandler(event) {\r\n        store.fireEvent(store.events.DANGER_ALERT, 'Failed creating Post.');\r\n        console.log(event);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        uploadFile();\r\n    }\r\n\r\n\r\n    return (<>{albums.length === 0 ? <div className=\"container image-upload\">Create Album first</div> :\r\n        <div className=\"container image-upload\">\r\n            <h3><i>Add Post to Album...</i></h3>\r\n            <div className=\"form-group\">\r\n                <select className=\"form-control\" value={selectedAlbumId} onChange={(event) => { setSelectedAlbumId(event.target.value); }}>\r\n                    {albums.map((album) => (\r\n                        <option key={album.id} value={album.id}>{album.albumName}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter caption\" value={caption} onChange={(event) => { setCaption(event.target.value) }} />\r\n            </div>\r\n            <div className=\"progress form-group\">\r\n                <div className=\"progress-bar\" style={{ width: progress + \"%\" }}></div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"file\" className=\"form-control-file border\" accept=\"image/*\" onChange={handleChange}></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <button className=\"btn btn-success\" onClick={handleUpload}>Upload</button>\r\n            </div>\r\n        </div>\r\n    }\r\n    </>\r\n    );\r\n\r\n}\r\n\r\nexport default ImageUpload;","import React, { useState } from 'react'\r\nimport './AddAlbum.css';\r\nimport apiHelper from '../../helpers/apiHelper';\r\nimport store from '../../helpers/store';\r\nfunction AddAlbum({ handler }) {\r\n\r\n    const [albumName, setAlbumName] = useState('');\r\n    const [isPrivate, setIsPrivate] = useState(false);\r\n\r\n\r\n    const addAlbum = (event) => {\r\n        event.preventDefault();\r\n        let token = store.getState(store.events.TOKEN);\r\n        apiHelper.addAlbum(albumName, isPrivate, token).then((resp) => {\r\n            if (resp.code === 0)\r\n                handler();\r\n            else {\r\n                console.log(resp.response);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>Add Album...</h4>\r\n            <form className=\"form-inline\">\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Album Name\" value={albumName} onChange={(event) => { setAlbumName(event.target.value) }} />\r\n                </div>\r\n                <div className=\"form-check spaceLeft\">\r\n                    <input type=\"checkbox\" className=\"form-check-input\" id=\"check1\" checked={isPrivate} onChange={(event => {\r\n                        setIsPrivate(event.target.checked)\r\n                    })} />Private\r\n                </div>\r\n                <div className=\"form-group spaceLeft\">\r\n                    <button className=\"btn btn-success\" onClick={addAlbum}>Add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAlbum\r\n","import React from 'react'\r\nimport './Album.css';\r\n\r\nfunction Album({ album, albumClickedHandler }) {\r\n\r\n\r\n    const onAlbumClicked = (event) => {\r\n        albumClickedHandler(album);\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-lg-2 col-sm-6 album\" onClick={onAlbumClicked}>\r\n            <div>\r\n                {album.albumName}\r\n            </div>\r\n            {album.isPrivate === true ?\r\n                (<div className=\"indicator\">\r\n                    <div className=\"redDot\"></div>\r\n                    <div className=\"indicatorText\">Private</div>\r\n                </div>) :\r\n                (<div className=\"indicator\">\r\n                    <div className=\"greenDot\"></div>\r\n                    <div className=\"indicatorText\">Public</div>\r\n                </div>)\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Album\r\n","import React, { useState } from 'react'\r\nimport './EditAlbum.css';\r\nimport apiHelper from '../../helpers/apiHelper';\r\nimport store from '../../helpers/store';\r\n\r\nfunction EditAlbum({ handler, selectedAlbum }) {\r\n\r\n    const [albumName, setAlbumName] = useState(selectedAlbum.albumName);\r\n    const [isPrivate, setIsPrivate] = useState(selectedAlbum.isPrivate);\r\n\r\n    const updateAlbum = (event) => {\r\n        event.preventDefault();\r\n        let token = store.getState(store.events.TOKEN);\r\n        apiHelper.updateAlbum(selectedAlbum.id, albumName, isPrivate, token).then((resp) => {\r\n            if (resp.code === 0)\r\n                handler();\r\n            else\r\n                store.fireEvent(store.events.DANGER_ALERT, 'Unable to update album');\r\n        });\r\n    }\r\n\r\n    const backHandler = (event) => {\r\n        handler();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>Edit Album...</h4>\r\n            <form className=\"form-inline\" onSubmit=\"updateAlbum()\">\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Album Name\" value={albumName} onChange={(event) => { setAlbumName(event.target.value) }} />\r\n                </div>\r\n                <div className=\"form-check spaceLeft\">\r\n                    <input type=\"checkbox\" className=\"form-check-input\" id=\"check1\" checked={isPrivate} onChange={(event => {\r\n                        setIsPrivate(event.target.checked)\r\n                    })} />Private\r\n                </div>\r\n                <div className=\"form-group spaceLeft\">\r\n                    <button type=\"submit\" className=\"btn btn-success\" onClick={updateAlbum}>Edit</button>\r\n                </div>\r\n                <div className=\"form-group spaceLeft\">\r\n                    <button className=\"btn btn-info\" onClick={backHandler}>Back</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditAlbum\r\n","import { useEffect, useState } from 'react';\r\nimport Post from '../Post/Post';\r\nimport store from '../../helpers/store';\r\nimport apiHelper from '../../helpers/apiHelper';\r\n\r\nfunction ViewAlbumPosts({ selectedAlbum }) {\r\n\r\n\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(selectedAlbum);\r\n        if (selectedAlbum) {\r\n            let token = store.getState(store.events.TOKEN);\r\n            apiHelper.getPostsForAlbumId(selectedAlbum.albumId, token).then(resp => {\r\n                if (resp.code === 0) {\r\n                    let posts = resp.response;\r\n                    setPosts(posts.map(post => {\r\n                        return {\r\n                            \"album\": post.album,\r\n                            \"dateAdded\": post.dateAdded,\r\n                            \"postId\": post._id,\r\n                            \"comments\": post.comments,\r\n                            \"caption\": post.caption,\r\n                            \"imageUrl\": apiHelper.getOriginURL() + '/postimage/' + post.fileName,\r\n                            \"userEmail\": post.userEmail,\r\n                            \"userName\": post.userName\r\n                        }\r\n                    }))\r\n                }\r\n                else {\r\n                    store.fireEvent(store.events.DANGER_ALERT, 'Unable to create user.');\r\n                }\r\n            });\r\n\r\n        }\r\n    }, [selectedAlbum]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                posts.map((post) => (\r\n                    <Post key={post.postId} postId={post.postId} userName={post.userName} imageUrl={post.imageUrl} caption={post.caption} timestamp={post.dateAdded} comments={post.comments} userEmail={post.userEmail} />\r\n                )\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewAlbumPosts\r\n","import { useEffect, useState } from 'react';\r\nimport AddAlbum from '../AddAlbum/AddAlbum';\r\nimport Album from '../Album/Album';\r\nimport './Albums.css';\r\nimport EditAlbum from '../EditAlbum/EditAlbum';\r\nimport ViewAlbumPosts from '../ViewAlbumPosts/ViewAlbumPosts';\r\nimport store from '../../helpers/store';\r\nimport apiHelper from '../../helpers/apiHelper';\r\n\r\nfunction Albums() {\r\n\r\n    const [albums, setAlbums] = useState([]);\r\n    const [status, setStatus] = useState(0);\r\n    const [selectedAlbum, setSelectedAlbum] = useState(null);\r\n\r\n    const currentUser = store.getState(store.events.CURRENT_USER);\r\n\r\n    useEffect(() => {\r\n        let token = store.getState(store.events.TOKEN);\r\n        apiHelper.getAlbumsForCurrentUser(token).then((resp) => {\r\n            if (resp.code !== 0) {\r\n                store.fireEvent(store.events.DANGER_ALERT, 'Unable to fetch albums');\r\n            }\r\n            else {\r\n                let albums = resp.response;\r\n                setAlbums(albums.map(album => {\r\n                    return {\r\n                        albumId: album._id,\r\n                        albumName: album.name,\r\n                        isPrivate: album.isPrivate,\r\n                        userEmail: album.userEmail\r\n                    };\r\n                }\r\n                ));\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const fetchAlbums = () => {\r\n        if (currentUser) {\r\n            let token = store.getState(store.events.TOKEN);\r\n            apiHelper.getAlbumsForCurrentUser(token).then((resp) => {\r\n                if (resp.code !== 0) {\r\n                    store.fireEvent(store.events.DANGER_ALERT, 'Unable to fetch albums');\r\n                }\r\n                else {\r\n                    let albums = resp.response;\r\n                    setAlbums(albums.map(album => {\r\n                        return {\r\n                            albumId: album._id,\r\n                            albumName: album.name,\r\n                            isPrivate: album.isPrivate,\r\n                            userEmail: album.userEmail\r\n                        };\r\n                    }\r\n                    ));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const albumClickedHandler = (album) => {\r\n        setSelectedAlbum(album);\r\n        setStatus(1);\r\n    }\r\n\r\n    const albumEdited = () => {\r\n        fetchAlbums();\r\n        setStatus(0);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            { status === 0 &&\r\n                <>\r\n                    <div className=\"container\">\r\n                        <div className=\"row album-list\">\r\n                            {albums.map((album) => (\r\n                                <Album key={album.albumId} album={album} albumClickedHandler={albumClickedHandler} />\r\n\r\n                            ))}\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <AddAlbum handler={fetchAlbums} />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n            { status === 1 &&\r\n                <>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <EditAlbum title=\"Edit Album\" selectedAlbum={selectedAlbum} handler={albumEdited} />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <ViewAlbumPosts selectedAlbum={selectedAlbum} />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Albums\r\n","\r\nimport store from '../../helpers/store';\r\nimport apiHelper from '../../helpers/apiHelper';\r\nimport { useState } from 'react';\r\n\r\nfunction ViewUsers({ userName, userEmail, userFollows }) {\r\n\r\n\r\n    const [currentUserFollows, setCurrentUserFollows] = useState(store.getState(store.events.CURRENT_USER).userFollows);\r\n\r\n\r\n    function followUser(event) {\r\n        let token = store.getState(store.events.TOKEN);\r\n        apiHelper.followUser(userEmail, token).then((res) => {\r\n            if (res.code === 0) {\r\n                let user = store.getState(store.events.CURRENT_USER);\r\n                user.userFollows.push(userEmail);\r\n                setCurrentUserFollows(user.userFollows);\r\n                store.updateCurrentUser(user);\r\n                store.fireEvent(store.events.SUCCESS_ALERT, 'Followed a new user.');\r\n            }\r\n            else {\r\n                store.fireEvent(store.events.DANGER_ALERT, 'Unable to follow user.');\r\n            }\r\n        });\r\n    }\r\n\r\n    function unfollowUser(event) {\r\n        let token = store.getState(store.events.TOKEN);\r\n        apiHelper.unfollowUser(userEmail, token).then((res) => {\r\n            if (res.code === 0) {\r\n                let user = store.getState(store.events.CURRENT_USER);\r\n                user.userFollows = user.userFollows.filter((ele) => {\r\n                    if (ele === userEmail) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                });\r\n                setCurrentUserFollows(user.userFollows);\r\n                store.updateCurrentUser(user);\r\n                store.fireEvent(store.events.SUCCESS_ALERT, 'Unfollowed a new user.');\r\n            }\r\n            else {\r\n                store.fireEvent(store.events.DANGER_ALERT, 'Unable to unfollow user.');\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card text-center shadow rounded post\">\r\n\r\n            <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3\">\r\n                        <img src={process.env.PUBLIC_URL + \"/images/img_avatar.png\"} className=\"img-fluid avatar\" alt=\"post pic\" />\r\n                    </div>\r\n                    <div className=\"col-lg-3\">\r\n                        <div>{userName}</div>\r\n                        <div>{userEmail}</div>\r\n                    </div>\r\n                    <div className=\"col-lg-3\">\r\n                        <div>Follows: {userFollows.length}</div>\r\n                    </div>\r\n                    <div className=\"col-lg-3\">\r\n                        {currentUserFollows.findIndex((ele) => { return ele === userEmail }) === -1 ?\r\n                            <button className=\"btn btn-success btn-sm\" onClick={followUser}>Follow</button>\r\n                            : <button className=\"btn btn-danger btn-sm\" onClick={unfollowUser}>Unfollow</button>}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewUsers\r\n","import React, { useEffect, useState } from 'react'\r\nimport store from '../../helpers/store';\r\nimport apiHelper from '../../helpers/apiHelper';\r\nimport ViewUsers from '../ViewUsers/ViewUsers';\r\n\r\nfunction SearchedProfiles({ searchedText }) {\r\n\r\n    const [searchedUsers, setSearchedUsers] = useState([]);\r\n\r\n    console.log(searchedUsers);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let token = store.getState(store.events.TOKEN);\r\n        apiHelper.getSearchedUsers(searchedText, token).then((resp) => {\r\n            if (resp.code === 0) {\r\n                let users = resp.response;\r\n                setSearchedUsers(users);\r\n            }\r\n            else {\r\n                store.fireEvent(store.events.DANGER_ALERT, 'Unable to fetch users.');\r\n            }\r\n        });\r\n    }, [searchedText])\r\n\r\n    return (\r\n        <div >\r\n            {\r\n\r\n                searchedUsers.map((user, id) => (\r\n                    <ViewUsers key={id} userName={user.userName} userEmail={user.userEmail} userFollows={user.userFollows} />\r\n                )\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchedProfiles\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Profile.css';\r\nimport store from '../../helpers/store';\r\nimport apiHelper from '../../helpers/apiHelper';\r\n\r\nfunction Profile() {\r\n\r\n    const [currentUser, setCurrentUser] = useState(store.getState(store.events.CURRENT_USER));\r\n    const [file, setFile] = useState(null);\r\n    const [photo, setPhoto] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let token = store.getState(store.events.TOKEN);\r\n        let currentUser = store.getState(store.events.CURRENT_USER);\r\n        apiHelper.getUserDetails(currentUser.userEmail, token).then((resp) => {\r\n\r\n            if (resp.code === 0) {\r\n                let user = resp.response;\r\n                if (user.photo)\r\n                    setPhoto(apiHelper.getOriginURL() + '/userimage/' + user.photo);\r\n                setCurrentUser(currentUser);\r\n            }\r\n\r\n            else {\r\n                store.fireEvent(store.events.DANGER_ALERT, 'Unable to get user details');\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.files[0]) {\r\n            setFile(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    function completeHandler(event) {\r\n        store.fireEvent(store.events.SUCCESS_ALERT, 'Photo uploaded successflly.');\r\n        setFile(null);\r\n        let response = JSON.parse(event.currentTarget.response);\r\n        if (response.photo)\r\n            setPhoto(apiHelper.getOriginURL() + '/userimage/' + response.photo);\r\n    }\r\n\r\n    function errorHandler(event) {\r\n        store.fireEvent(store.events.DANGER_ALERT, 'Unable to upload photo.');\r\n        console.log(event);\r\n    }\r\n\r\n    function abortHandler(event) {\r\n        store.fireEvent(store.events.DANGER_ALERT, 'Unable to upload photo.');\r\n        console.log(event);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        uploadFile();\r\n    }\r\n\r\n\r\n    function uploadFile() {\r\n        let token = store.getState(store.events.TOKEN);\r\n        let url = apiHelper.getOriginURL();\r\n        url += '/api/user/profile';\r\n        var formdata = new FormData();\r\n        formdata.append(\"userImage\", file);\r\n        var ajax = new XMLHttpRequest();\r\n\r\n        ajax.addEventListener(\"load\", completeHandler, false);\r\n        ajax.addEventListener(\"error\", errorHandler, false);\r\n        ajax.addEventListener(\"abort\", abortHandler, false);\r\n        ajax.open(\"POST\", url);\r\n        ajax.setRequestHeader('token', `Bearer ${token}`);\r\n        ajax.send(formdata);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card text-center shadow rounded post\">\r\n            <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n\r\n                        <img src={photo == null ? process.env.PUBLIC_URL + \"/images/img_avatar.png\" : photo} className=\"img-fluid profile\" alt=\"post pic\" />\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"form-group\">\r\n                            <input type=\"file\" className=\"form-control-file border\" accept=\"image/*\" onChange={handleChange}></input>\r\n                        </div>\r\n                        <button className=\"btn btn-success\" onClick={handleUpload}>Change Photo</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                {currentUser && <>\r\n                    <p><b>User Name: </b>{currentUser.userName}</p>\r\n                    <p><b>User Email: </b>{currentUser.userEmail}</p></>\r\n                }\r\n            </div>\r\n            <div className=\"card-footer myfooter\">\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState } from 'react'\r\nimport apiHelper from '../../helpers/apiHelper';\r\nimport store from '../../helpers/store';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const loginHandler = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let response = await apiHelper.doLogin(email, password);\r\n            if (response.code !== 0) {\r\n                store.fireEvent(store.events.DANGER_ALERT, 'Unable to login');\r\n                return;\r\n            }\r\n            let loginResponse = response.response;\r\n            let currentUser = {\r\n                userName: loginResponse.userName,\r\n                userEmail: loginResponse.userEmail,\r\n                userFollows: loginResponse.follows\r\n            };\r\n            store.saveOrUpdateState(store.events.CURRENT_USER, currentUser);\r\n            localStorage.setItem(store.events.CURRENT_USER, JSON.stringify(currentUser));\r\n            store.saveOrUpdateState(store.events.TOKEN, loginResponse.token);\r\n            localStorage.setItem(store.events.TOKEN, loginResponse.token);\r\n            store.fireEvent('login', null);\r\n            store.fireEvent('home', null);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            store.fireEvent(store.events.DANGER_ALERT, 'Login Failed');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"form myform container\" onSubmit={loginHandler}>\r\n            <h2><i>Login</i></h2>\r\n            <div className=\"form-group\">\r\n                <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" value={email} onChange={(event) => { setEmail(event.target.value) }} required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" value={password} onChange={(event) => { setPassword(event.target.value) }} required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport apiHelper from '../../helpers/apiHelper';\r\nimport store from '../../helpers/store';\r\n\r\nfunction Signup() {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    let history = useHistory();\r\n    const signUpHandler = (event) => {\r\n        event.preventDefault();\r\n        apiHelper.doRegister(email, username, password).then((resp) => {\r\n            if (resp.code !== 0) {\r\n                store.fireEvent(store.events.DANGER_ALERT, 'Unable to create user.');\r\n            }\r\n            else\r\n                history.push('/login');\r\n\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"form myform container\" onSubmit={signUpHandler}>\r\n            <h2><i>Sign up</i></h2>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter username\" value={username} onChange={(event) => { setUsername(event.target.value) }} required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" value={email} onChange={(event) => { setEmail(event.target.value) }} required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" value={password} onChange={(event) => { setPassword(event.target.value) }} required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import Header from './components/Header/Header';\nimport './App.css';\nimport Post from './components/Post/Post';\nimport { useState, useEffect } from 'react';\nimport ImageUpload from './components/ImageUpload/ImageUpload';\nimport { Route, useHistory } from 'react-router-dom';\nimport Albums from './components/Albums/Albums';\nimport ViewAlbumPosts from './components/ViewAlbumPosts/ViewAlbumPosts';\nimport SearchedProfiles from './components/SearchedProfiles/SearchedProfiles';\nimport apiHelper from './helpers/apiHelper';\nimport store from './helpers/store';\nimport Profile from './components/Profile/Profile';\nimport Login from './components/Login/Login';\nimport Signup from './components/Signup/Signup';\n\nfunction App() {\n\n  const [posts, setPosts] = useState([]);\n  const [selectedAlbum, setSelectedAlbum] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [alertMessage, setAlertMessage] = useState('');\n\n\n  let history = useHistory();\n\n  function showSuccessAlert(data) {\n    if (data) {\n      setAlertMessage(data);\n      let element = document.getElementById(\"mySuccessAlert\");\n      element.classList.remove(\"alertMeShow\");\n      void element.offsetWidth;\n      element.classList.add(\"alertMeShow\");\n    }\n  }\n\n  function showDangerAlert(data) {\n    if (data) {\n      setAlertMessage(data);\n      let element = document.getElementById(\"myDangerAlert\");\n      element.classList.remove(\"alertMeShow\");\n      void element.offsetWidth;\n      element.classList.add(\"alertMeShow\");\n    }\n  }\n\n  store.registerHandler(store.events.SUCCESS_ALERT, showSuccessAlert);\n  store.registerHandler(store.events.DANGER_ALERT, showDangerAlert);\n\n\n  function searchUserHandler(searchedText) {\n    setSearchText(searchedText);\n    history.push('/searchUser');\n  }\n\n  useEffect(() => {\n    const openHomePageHandler = (data) => {\n      history.push('/');\n      fetchPosts();\n    }\n    store.registerHandler('login', openHomePageHandler);\n    return () => {\n      store.removeHandler('login');\n    }\n  }, [history]);\n\n  function fetchPosts() {\n    let token = store.getState(store.events.TOKEN);\n    apiHelper.getWorldPosts(token).then(resp => {\n      if (resp.code === 0) {\n        let posts = resp.response;\n        setPosts(posts.map(post => {\n          return {\n            \"album\": post.album,\n            \"dateAdded\": post.dateAdded,\n            \"postId\": post._id,\n            \"comments\": post.comments,\n            \"caption\": post.caption,\n            \"imageUrl\": apiHelper.getOriginURL() + '/postimage/' + post.fileName,\n            \"userEmail\": post.userEmail,\n            \"userName\": post.userName\n          }\n        }));\n      }\n      else {\n        store.fireEvent(store.events.DANGER_ALERT, 'Unable to fetch posts.');\n      }\n    });\n  }\n\n  useEffect(() => {\n\n\n    let token = store.getState(store.events.TOKEN);\n    apiHelper.getWorldPosts(token).then(resp => {\n      if (resp.code === 0) {\n        let posts = resp.response;\n        setPosts(posts.map(post => {\n          return {\n            \"album\": post.album,\n            \"dateAdded\": post.dateAdded,\n            \"postId\": post._id,\n            \"comments\": post.comments,\n            \"caption\": post.caption,\n            \"imageUrl\": apiHelper.getOriginURL() + '/postimage/' + post.fileName,\n            \"userEmail\": post.userEmail,\n            \"userName\": post.userName\n          }\n        }));\n      }\n      else if (resp.code === 21 || resp.code === 22) {\n        store.fireEvent(store.events.DANGER_ALERT, 'Please login or signup first.');\n      }\n      else {\n        store.fireEvent(store.events.DANGER_ALERT, 'Unable to fetch posts.');\n      }\n    });\n  }, []);\n\n  const openAlbumHandler = (selectedAlbum) => {\n    setSelectedAlbum(selectedAlbum);\n    history.push('/album');\n  }\n\n  return (\n    <div className=\"App\">\n      <Header searchUserHandler={searchUserHandler} />\n\n\n      <Route\n        path='/'\n        exact\n        render={(props) => (\n          <div className=\"container\">\n            {\n              posts.map((post) => (\n                <Post key={post.postId} postId={post.postId} userName={post.userName} imageUrl={post.imageUrl} caption={post.caption} timestamp={post.dateAdded} album={post.album} openAlbum={openAlbumHandler} comments={post.comments} userEmail={post.userEmail} />\n              )\n              )\n            }\n          </div>\n        )}\n      />\n      <Route path='/upload' component={ImageUpload} />\n      <Route path='/login' component={Login} />\n      <Route path='/signup' component={Signup} />\n      <Route path='/albums'\n        render={\n          (props) => (\n            <>\n              <Albums />\n            </>\n          )\n\n        } />\n\n      <Route path='/album'\n        exact\n        render={\n          (props) => (\n            <div className=\"container\">\n              <ViewAlbumPosts selectedAlbum={selectedAlbum} />\n            </div>\n          )\n\n        } />\n\n      <Route path='/searchUser'\n        exact\n        render={\n          (props) => (\n            <div className=\"container\">\n              <SearchedProfiles searchedText={searchText} />\n            </div>\n          )\n\n        } />\n      <Route path='/profile'\n        exact\n        render={\n          (props) => (\n            <div className=\"container\">\n              <Profile />\n            </div>\n          )\n\n        } />\n      <div id=\"mySuccessAlert\" className=\"alert alert-success alert-dismissible alertMe \">\n        <strong>Success!</strong> {alertMessage}\n      </div>\n      <div id=\"myDangerAlert\" className=\"alert alert-danger alert-dismissible alertMe \">\n        <strong>Failed!</strong> {alertMessage}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}